factorial(6)
6
x <- "abc"
myVec
myVec <- c(-1,0,0,1)
myVec
v2 <- seq(5,7,3,by=.5)
v2 <- seq(5,7,3,by = .5)
v2 <- seq(5,7.3,by = .5)
v3 <- seq(1,3,length = 10)
set.seed(123456)
uniform_sample <- runif(100,-1,1)
uniform_sample(1:20)
set.seed(123456)
uniform_sample <- runif(100,-1,1)
uniform_sample(1:20)
set.seed(123456)
uniform_sample <- runif(100,-1,1)
uniform_sample[1:20]
set.seed(123456)
uniform_sample <- runif(100,-1,1)
uniform_sample[1:20]
hist(uniform_sample)
set.seed(123456)
normal_sample <- rnorm(100,70,10)
normal_sample[1:20]
hist(normal_sample)
load("C:/Users/lienm/OneDrive/Courses/Data Analysis - C. Durso/HW1/HW1Submission/ps1_R_basics.RData")
2*pt(-abs(2.3), df=25)
load("C:/Users/lienm/OneDrive/Courses/Data Analysis - C. Durso/HW5/HW5Submission/ps5.RData")
chisq.test(m)
View(m)
View(m)
m2 <- matrix(c(520, 1284, 590, 1260),nrow=2,byrow=TRUE)
dimnames(m2)[[1]]<-paste("mask",1:6,sep="_")
dimnames(m2)[[2]]<-c("incorrect","correct")
m2
View(m2)
View(m2)
m2 <- matrix(c(520, 1284, 590, 1260),nrow=2,byrow=TRUE)
dimnames(m2)[[1]]<-paste("mask",1:2,sep="_")
dimnames(m2)[[2]]<-c("incorrect","correct")
m2
chisq.test(m2)
save.image("C:/Users/lienm/OneDrive/Courses/Data Analysis - C. Durso/HW5/HW5Submission/ps5.RData")
O<-c(5474,1850)
E<-c(3/4,1/4)*7324
chi.stat<-sum((O-E)^2/E)
pchisq(chi.stat,1,lower.tail=FALSE)
prop.test(5474, 7324,3/4,correct=FALSE)
dat<-data.frame(success=c(14,38),failure=c(7,4))
View(dat)
row.names(dat)<-c("Prednisone","Pred+VCR")
dat
fisher.test(dat)
chisq.test(dat)
n<-length(up)
## Lien Ly - Problem Set 5
## Question 1
m <- matrix(c(555,1268,520, 1284, 555, 1262, 590, 1260, 550, 1267, 550,1276),nrow=6,byrow=TRUE)
dimnames(m)[[1]]<-paste("mask",1:6,sep="_")
dimnames(m)[[2]]<-c("incorrect","correct")
m
## a - Are the results likely under the hypothesis that the viewers are guessing
## randomly with a probability of success equal to 0.5? Please explain your choice
## of method, and show your calculations.
## b - Are the results likely under the hypothesis that the the viewer ability
## to guess the word is the same regardless of which masking is used? Please explain
## your choice of method, and show your calculations.
chisq.test(m)
## c - Repeat the analysis using just mask 2 and mask 4. Are the results consistent
## with the hypothesis that the the viewer ability to guess the word is the same,
## regardless of which masking is used? Please explain your choice of method, and
## show your calculations.
m2 <- matrix(c(520, 1284, 590, 1260),nrow=2,byrow=TRUE)
dimnames(m2)[[1]]<-paste("mask",1:2,sep="_")
dimnames(m2)[[2]]<-c("incorrect","correct")
m2
chisq.test(m2)
## Question 2
## a
## a
pbinom(q=14,size=20,prob=0.5,lower.tail = F)
pbinom(q=13,size=20,prob=0.5,lower.tail = F)
q2_a <- pbinom(q=13,size=20,prob=0.5,lower.tail = F)
chisq.test(m[1,1:2], p=c(0.5,0.5))
chisq.test(m[1,1:2], p=c(0.5,0.5))
chisq.test(m[2,1:2], p=c(0.5,0.5))
chisq.test(m[3,1:2], p=c(0.5,0.5))
chisq.test(m[4,1:2], p=c(0.5,0.5))
chisq.test(m[5,1:2], p=c(0.5,0.5))
chisq.test(m[6,1:2], p=c(0.5,0.5))
save.image("C:/Users/lienm/OneDrive/Courses/Data Analysis - C. Durso/HW5/HW5Submission/ps5.RData")
chisq.test(m[6,1:2], p=c(0.5,0.5))
chisq.test(m[5,1:2], p=c(0.5,0.5))
m
m3 <- matrix(c(555,1268,555, 1262, 550, 1267, 550,1276),nrow=6,byrow=TRUE)
m3 <- matrix(c(555,1268,555, 1262, 550, 1267, 550,1276),nrow=4,byrow=TRUE)
dimnames(m3)[[1]]<-paste("mask",1:4,sep="_")
dimnames(m3)[[2]]<-c("incorrect","correct")
m3
chisq.test(m3)
save.image("C:/Users/lienm/OneDrive/Courses/Data Analysis - C. Durso/HW5/HW5Submission/ps5.RData")
help(apipop)
install.packages("survey")
library(survey)
data(api)
save.image("C:/Users/lienm/OneDrive/Courses/Data Analysis - C. Durso/HW7/HW7Submission/ps7.RData")
load("C:/Users/lienm/OneDrive/Courses/Independent Study - N. Sturtevant/Week 8/.RData")
View(datFrame)
View(datFrame)
View(dat)
View(datFrame)
setwd("C:/Users/lienm/OneDrive/Courses/Independent Study - N. Sturtevant/Week 9/R")
dat <- read.csv(file.choose(), header=TRUE) ## combined.csv
dat_10min <- read.csv("features_10.csv", header=TRUE)
summary(dat)
summary(dat_10min)
observationNum <- nrow(dat_10min)
View(dat_10min)
minute10.glm <- glm(winner ~ goldDif + creepDif + killDif + assistDif + dragonDif, data = mydata, family = "binomial")
minute10.glm <- glm(winner ~ goldDif + creepDif + killDif + assistDif + dragonDif, data = dat_10min, family = "binomial")
resultSum_3 <- summary(minute10.glm)
dat_10min <- read.csv("features_10.csv", header=TRUE)
summary(dat_10min)
observationNum <- nrow(dat_10min)
## Run test
minute10.glm <- glm(winner ~ goldDif + creepDif + killDif + assistDif + dragonDif, data = dat_10min, family = "binomial")
summary(minute10.glm)
dat_20min <- read.csv("features_20.csv", header=TRUE)
summary(dat_20min)
observationNum <- nrow(dat_20min)
## Run test
minute20.glm <- glm(winner ~ goldDif + creepDif + killDif + assistDif + dragonDif, data = dat_10min, family = "binomial")
summary(minute20.glm)
minute20.glm <- glm(winner ~ goldDif + creepDif + killDif + assistDif + dragonDif, data = dat_20min, family = "binomial")
summary(minute20.glm)
dat_30min <- read.csv("features_30.csv", header=TRUE)
summary(dat_30min)
observationNum <- nrow(dat_30min)
## Run test
minute30.glm <- glm(winner ~ goldDif + creepDif + killDif + assistDif + dragonDif, data = dat_30min, family = "binomial")
summary(minute30.glm)
confint(minute20.glm)
confint.default(minute20.glm)
wald.test(b = coef(minute20.glm), Sigma = vcov(minute20.glm), Terms = 1:5)
exp(coef(minute20.glm))
exp(cbind(OR = coef(minute20.glm), confint(minute20.glm)))
png("gold10.png", width=4, height=4, units="in", res=300)
plot(dat_10min$goldDif,dat_10min$winner,main = "Gold Diff at 10")
dev.off()
png("creep10.png", width=4, height=4, units="in", res=300)
plot(dat_10min$creepDif,dat_10min$winner,main = "Creep Diff at 10")
dev.off()
png("kill10.png", width=4, height=4, units="in", res=300)
plot(dat_10min$killDif,dat_10min$winner,main = "Kill Diff at 10")
dev.off()
png("assist10.png", width=4, height=4, units="in", res=300)
plot(dat_10min$assistDif,dat_10min$winner,main = "Assist Diff at 10")
dev.off()
png("dragon10.png", width=4, height=4, units="in", res=300)
plot(dat_10min$dragonDif,dat_10min$winner,main = "Dragon Diff at 10")
dev.off()
png("gold20.png", width=4, height=4, units="in", res=300)
plot(dat_20min$goldDif,dat_20min$winner,main = "Gold Diff at 20")
dev.off()
png("creep20.png", width=4, height=4, units="in", res=300)
plot(dat_20min$creepDif,dat_20min$winner,main = "Creep Diff at 20")
dev.off()
png("kill20.png", width=4, height=4, units="in", res=300)
plot(dat_20min$killDif,dat_20min$winner,main = "Kill Diff at 20")
dev.off()
png("assist20.png", width=4, height=4, units="in", res=300)
plot(dat_20min$assistDif,dat_20min$winner,main = "Assist Diff at 20")
dev.off()
png("dragon20.png", width=4, height=4, units="in", res=300)
plot(dat_20min$dragonDif,dat_20min$winner,main = "Dragon Diff at 20")
dev.off()
png("gold30.png", width=4, height=4, units="in", res=300)
plot(dat_30min$goldDif,dat_30min$winner,main = "Gold Diff at 30")
dev.off()
png("creep30.png", width=4, height=4, units="in", res=300)
plot(dat_30min$creepDif,dat_30min$winner,main = "Creep Diff at 30")
dev.off()
png("kill30.png", width=4, height=4, units="in", res=300)
plot(dat_30min$killDif,dat_30min$winner,main = "Kill Diff at 30")
dev.off()
png("assist30.png", width=4, height=4, units="in", res=300)
plot(dat_30min$assistDif,dat_30min$winner,main = "Assist Diff at 30")
dev.off()
png("dragon30.png", width=4, height=4, units="in", res=300)
plot(dat_30min$dragonDif,dat_30min$winner,main = "Dragon Diff at 30")
dev.off()
